# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Create necessary directories and files
        run: |
          sudo mkdir -p /var/secure
          sudo chmod 700 /var/secure
          echo "light; sudo,dev,www-data" > users.txt
          echo "idimma; sudo" >> users.txt
          echo "mayowa; dev,www-data" >> users.txt

      - name: Make script executable
        run: chmod +x create_users.sh

      - name: Run the script
        run: sudo ./create_users.sh users.txt

      - name: Verify log file creation
        run: |
          if [ ! -f /var/log/user_management.log ]; then
            echo "Log file not found!"
            exit 1
          fi
          echo "Log file found."

      - name: Verify password file creation
        run: |
          if [ ! -f /var/secure/user_passwords.txt ]; then
            echo "Password file not found!"
            exit 1
          fi
          if [ "$(stat -c %a /var/secure/user_passwords.txt)" != "600" ]; then
            echo "Password file permissions are not set to 600!"
            exit 1
          fi
          echo "Password file found and permissions are set correctly."

      - name: Display logs for debugging
        run: |
          echo "Content of /var/log/user_management.log:"
          sudo cat /var/log/user_management.log
          echo "Content of /var/secure/user_passwords.txt:"
          sudo cat /var/secure/user_passwords.txt || echo "Password file is empty or not readable"
